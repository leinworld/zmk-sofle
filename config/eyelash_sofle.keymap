#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    macros {
        rmb_kp: rmb_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&mkp MB2>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&mkp MB2>;

            label = "RMB_KP";
        };

        rmb_mmv: rmb_mmv {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&mkp MB2>,
                <&macro_press>,
                <&macro_param_1to1 &mmv MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&mkp MB2>;

            label = "RMB_MMV";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC           &kp N1    &kp N2        &kp N3        &kp N4  &kp N5    &msc SCRL_UP     &kp N6     &kp N7     &kp N8            &kp N9   &kp N0      &kp BACKSPACE
&kp TAB           &kp Q     &kp W         &kp E         &kp R   &kp T     &msc SCRL_DOWN   &kp Y      &kp U      &kp I             &kp O    &kp P       &kp BSLH
&kp LEFT_CONTROL  &kp A     &kp S         &kp D         &kp F   &kp G     &msc SCRL_LEFT   &kp H      &kp J      &kp K             &kp L    &kp SEMI    &kp APOS
&kp LSHFT         &kp Z     &kp X         &kp C         &kp V   &kp B     &msc SCRL_RIGHT  &kp N      &kp M      &kp COMMA         &kp DOT  &kp FSLH    &kp RIGHT_SHIFT
&kp C_MUTE        &kp CAPS  &kp LEFT_GUI  &kp LEFT_ALT  &mo 3   &mo 5     &mkp MB3         &kp ENTER  &kp SPACE  &kp LANG_HANGEUL  &tog 2   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
            label = "Base";
        };

        VS {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3     &kp F4     &trans    &trans  &trans           &trans         &trans            &trans         &trans  &trans
&trans  &kp F5  &kp F6   &kp F7     &kp F8     &trans    &trans  &kp HOME         &kp END        &kp PAGE_UP       &kp PAGE_DOWN  &trans  &trans
&trans  &kp F9  &kp F10  &kp F11    &kp F12    &trans    &trans  &kp LEFT         &kp DOWN       &kp UP_ARROW      &kp RIGHT      &trans  &trans
&trans  &trans  &trans   &kp LC(C)  &kp LC(V)  &trans    &trans  &kp PAUSE_BREAK  &kp C_AC_BACK  &kp C_AC_FORWARD  &trans         &trans  &trans
&trans  &trans  &trans   &trans     &trans     &trans    &trans  &trans           &trans         &trans            &trans         &trans
            >;

            label = "VS";
        };

        DeviceCtrl {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_COLOR_HSB(0,64,76)  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans  &trans           &trans                          &trans           &trans           &trans           &trans
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &trans  &trans           &trans                          &trans           &trans           &trans           &trans
&trans  &sys_reset    &trans          &bootloader   &trans        &trans          &trans  &trans           &trans                          &sys_reset       &soft_off        &bootloader      &trans
&trans  &trans        &trans          &trans        &trans        &trans          &trans  &trans           &trans                          &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "DeviveCtrl";
        };

        Sub {
            display-name = "Sub";
            bindings = <
&kp GRAVE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &mmv MOVE_UP     &kp F6     &kp F7    &kp F8      &kp F9     &kp F10           &trans
&trans     &trans  &trans  &trans  &trans  &trans    &mmv MOVE_DOWN   &kp PG_UP  &kp END   &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans     &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &trans  &trans  &trans  &trans  &trans    &mmv MOVE_RIGHT  &trans     &trans    &kp INSERT  &kp F11    &kp F12           &trans
&trans     &trans  &trans  &trans  &trans  &trans    &mkp LCLK        &trans     &trans    &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        UE {
            bindings = <
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans              &trans              &trans               &trans  &trans  &trans
&trans  &trans     &rmb_kp W  &trans     &trans  &trans    &trans  &trans              &rmb_mmv MOVE_UP    &trans               &trans  &trans  &trans
&trans  &rmb_kp A  &rmb_kp S  &rmb_kp D  &trans  &trans    &trans  &rmb_mmv MOVE_LEFT  &rmb_mmv MOVE_DOWN  &rmb_mmv MOVE_RIGHT  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans              &trans              &trans               &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans    &trans  &trans              &trans              &trans               &trans  &trans
            >;

            label = "UE";
        };

        ToLayer {
            bindings = <
&trans  &to 0   &to 1   &to 2   &to 3   &to 4     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "ToLayer";
        };
    };
};
